- name: Setup Fedora Workstation
  hosts: all
  become: true
  connection: local
  gather_facts: true
  vars_files:
    - packages.yml
  vars_prompt:
    - name: desktop_environment
      prompt: "Which desktop environment (gnome/sway) are you using?"
      private: no
  vars:
    current_username: "{{ lookup('env', 'USER') }}"
    dconf_dir: "/home/{{ current_username }}/.config/dconf"
  tasks:
    ######## Validation Blocks Begins ########
    - fail:
        msg: "This playbook is only for Fedora Workstation"
      when: ansible_distribution != 'Fedora'

    - fail:
        msg: "Valid desktop environment is gnome or sway only"
      when: desktop_environment not in ['gnome', 'sway']
    ######## END OF Validation Blocks ########

    - name: Ensure Microsoft repo exist in yum.repo directory
      ansible.builtin.get_url:
        url: https://packages.microsoft.com/config/rhel/9/prod.repo
        dest: /etc/yum.repos.d/microsoft.repo
        owner: root
        group: root
        mode: '0644'

    - name: Ensure yum repos exist in yum.repo directory
      ansible.builtin.copy:
        src: "files/{{ item }}"
        dest: /etc/yum.repos.d/{{ item }}
        owner: root
        group: root
        mode: '0644'
      loop:
        - hashicorp.repo
        - vscode.repo
        - virtualbox.repo

    - name: Install common dnf packages
      ansible.builtin.dnf:
        name: "{{ common_dnf_packages }}"
        state: present
      when: ansible_distribution == 'Fedora' or ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

    - name: Install packages from Flatpak
      community.general.flatpak:
        name: "{{ flatpak_packages }}"
        state: present

    - name: Setup vimrc file
      ansible.builtin.copy:
        src: "files/.vimrc"
        dest: "{{ item.path }}/.vimrc"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: '0644'
      loop:
        - path: /root
          owner: root
          group: root
        - path: /home/{{ current_username }}
          owner: "{{ current_username }}"
          group: "{{ current_username }}"
        - path: /etc/skel
          owner: root
          group: root

    - name: Make vim as default editor in .bashrc file
      ansible.builtin.lineinfile:
        path: "{{ item }}/.bashrc"
        regexp: "^EDITOR="
        line: EDITOR=/usr/bin/vim
      loop:
        - /root
        - /home/{{ current_username }}
        - /etc/skel

    ######## VirtualBox Blocks Begins ########
    - name: Ensure virtualbox repo exist in yum.repo directory
      ansible.builtin.get_url:
        url: http://download.virtualbox.org/virtualbox/rpm/fedora/virtualbox.repo
        dest: /etc/yum.repos.d/virtualbox.repo
        owner: root
        group: root
        mode: '0644'

    - name: Install packages for virtualbox
      ansible.builtin.dnf:
        name: "{{ dnf_packages_for_virtualbox }}"
        state: present
      when: ansible_distribution == 'Fedora' or ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
      notify: Reboot the machine

    # We need to flush handlers to ensure that the handlers are executed here
    # and not at the end of the play, which is the default behavior.
    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Install VirtualBox-7.0
      ansible.builtin.dnf:
        name: VirtualBox-7.0

    - name: Ensure vboxdrv Service is stared and enabled
      ansible.builtin.service:
        name: vboxdrv
        state: started
        enabled: true

    - name: Ensure /etc/vbox directory exists
      ansible.builtin.file:
        path: /etc/vbox
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Setup VirtualBox Network
      ansible.builtin.copy:
        content: "* 192.168.56.0/16 192.168.60.0/24 192.168.70.0/24 192.168.80.0/24 192.168.88.0/24 192.168.99.0/24"
        dest: /etc/vbox/networks.conf
        owner: root
        group: root
        mode: '0644'

    - name: Ensure user is in the libvirt and vboxusers group ({{ current_username }})
      ansible.builtin.user:
        name: "{{ current_username }}"
        groups: libvirt,vboxusers
        append: true
    ######## END OF VirtualBox Blocks ########

    ######## GNOME Blocks Begins ########
    - block:
        - name: Install gnome dnf packages
          ansible.builtin.dnf:
            name: "{{ gnome_dnf_packages }}"
            state: present

    - name: Ensure dconf directory exists
      ansible.builtin.file:
        path: "{{ dconf_dir }}"
        state: directory
        owner: "{{ current_username }}"
        group: "{{ current_username }}"
        mode: '0700'

    - name: Generate dconf settings template
      ansible.builtin.template:
        src: "templates/dconf-settings.ini.j2"
        dest: "{{ dconf_dir }}/dconf.ini"
        owner: "{{ current_username }}"
        group: "{{ current_username }}"
        mode: '0600'
      notify: Reload dconf settings
      when: desktop_environment == 'gnome'
    ######## END OF GNOME Blocks ########

    ######## SWAY Blocks Begins ########
    - block:
        - name: Install Sway dnf packages
          ansible.builtin.dnf:
            name: "{{ sway_dnf_packages }}"
            state: present

        - name: Copy background image to ~/Pictures directory
          ansible.builtin.copy:
            src: "files/sportcar-sunset.jpg"
            dest: "/home/{{ current_username }}/Pictures/sportcar-sunset.jpg"
            owner: "{{ current_username }}"
            group: "{{ current_username }}"
            mode: '0644'
          notify: Reload Sway

        - name: Copy .config directory to /home/{{ current_username }} directory
          ansible.builtin.copy:
            src: "templates/.config"
            dest: "/home/{{ current_username }}"
            owner: "{{ current_username }}"
            group: "{{ current_username }}"
            mode: '0700'
          notify: Reload Sway


        - name: Set TERM as xterm-256color in .bashrc file
          ansible.builtin.lineinfile:
            path: "{{ item }}/.bashrc"
            regexp: "^export TERM="
            line: "export TERM=xterm-256color"
          loop:
            - /root
            - /home/{{ current_username }}
            - /etc/skel
          notify: Reload Sway

      when: desktop_environment == 'sway'
    ######## END OF Sway Blocks ########

  handlers:
    - name: Reboot the machine
      ansible.builtin.fail:
        msg: Reboot Required. Please reboot the machine before continue

    - name: Reload dconf settings
      ansible.builtin.shell:
        cmd: "dconf load / < {{ dconf_dir }}/dconf.ini"
      changed_when: true
